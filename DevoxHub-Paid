wait(0.2)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Full Rayfield window with presets
local Window = Rayfield:CreateWindow({
    Name = "DevoxHUB Paid",
    Icon = 0,
    LoadingTitle = "DevoxHUB Interface",
    LoadingSubtitle = "Paid Version",
    ShowText = "Devox",
    Theme = "Light",
    ToggleUIKeybind = "K",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = "DevoxHUB",
        FileName = "Config"
    },

    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "DevoxHUB Paid",
        Subtitle = "Enter Your Key",
        Note = "Get your key from the Server!",
        FileName = "DEVOXkey1",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"DEVOXPAID901"}
    }
})

-- Startup sound
do
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://95080503984633"
    sound.Volume = 1
    sound.Parent = workspace
    sound:Play()
end

-- Paid tab
local PaidTab = Window:CreateTab("Paid",6034509999)
PaidTab:CreateButton({Name="DEVOX HUB PAID", Callback=function()print("paid1")end})
PaidTab:CreateButton({Name="THANKS FOR USING DEVOX", Callback=function()print("paid2")end})

-- Player tab
local PlayerTab = Window:CreateTab("Player",4483362458)
local WalkSpeedSlider = PlayerTab:CreateSlider({
    Name="Walk Speed",
    Range={16,200},
    Increment=1,
    Suffix="Speed",
    CurrentValue=16,
    Flag="WalkSpeed_Slider",
    Callback=function(v)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed=v
        end
    end
})
local InfJumpEnabled=false
PlayerTab:CreateToggle({Name="Infinite Jump", CurrentValue=false, Callback=function(v)InfJumpEnabled=v end})
UserInputService.JumpRequest:Connect(function()
    if InfJumpEnabled and player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)
local FOVSlider = PlayerTab:CreateSlider({Name="FOV",Range={70,120},Increment=1,Suffix="Â°",CurrentValue=70,Callback=function(v)camera.FieldOfView=v end})
local DashDistance=10
PlayerTab:CreateSlider({Name="Dash Distance",Range={1,20},Increment=1,Suffix="studs",CurrentValue=DashDistance,Callback=function(v)DashDistance=v end})
PlayerTab:CreateButton({Name="Dash",Callback=function()
    local hrp=player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if hrp then hrp.CFrame=hrp.CFrame+CFrame.new(hrp.CFrame.LookVector*DashDistance).Position end
end})

-- Magnet/ESP tab (optimized)
local MagnetTab = Window:CreateTab("MAGS+ESP",6034509999)
local magsEnabled, espEnabled = false, false
local debounce = false
local magConnection, espConnection
local espBalls = {}
local MAG_ESP_RADIUS = 9

local MagESPRadiusSlider = MagnetTab:CreateSlider({
    Name="MAGS+ESP Radius",
    Range={1,20},
    Increment=1,
    Suffix="studs",
    CurrentValue=MAG_ESP_RADIUS,
    Callback=function(v) MAG_ESP_RADIUS=v end
})

-- Helper: create ESP for a football
local function createESP(ball)
    if espBalls[ball] then return end
    local s = Instance.new("SphereHandleAdornment")
    s.Adornee = ball
    s.Radius = MAG_ESP_RADIUS
    s.Color3 = Color3.fromRGB(180,0,255)
    s.Transparency = 0.6
    s.AlwaysOnTop = true
    s.ZIndex = 5
    s.Parent = game.CoreGui
    espBalls[ball] = s
    ball.AncestryChanged:Connect(function(_,par)
        if not par and espBalls[ball] then
            espBalls[ball]:Destroy()
            espBalls[ball] = nil
        end
    end)
end

-- Track footballs efficiently
workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("BasePart") and obj.Name=="Football" and espEnabled then
        createESP(obj)
    end
end)

local function toggleMagsESP(state)
    magsEnabled = state
    espEnabled = state

    -- Magnet
    if magsEnabled then
        magConnection = RunService.Heartbeat:Connect(function()
            local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if not hrp then return end
            local region = Region3.new(
                hrp.Position - Vector3.new(MAG_ESP_RADIUS,MAG_ESP_RADIUS,MAG_ESP_RADIUS),
                hrp.Position + Vector3.new(MAG_ESP_RADIUS,MAG_ESP_RADIUS,MAG_ESP_RADIUS)
            )
            for _, p in ipairs(workspace:FindPartsInRegion3(region,nil,math.huge)) do
                if p.Name=="Football" and p:IsA("BasePart") and (p.Position-hrp.Position).Magnitude<MAG_ESP_RADIUS then
                    if not debounce then
                        debounce = true
                        local la = player.Character:FindFirstChild("Left Arm") or player.Character:FindFirstChild("LeftHand")
                        if la then
                            firetouchinterest(la,p,0) task.wait()
                            firetouchinterest(la,p,1)
                        end
                        task.wait(0.2)
                        debounce = false
                    end
                end
            end
        end)
    elseif magConnection then
        magConnection:Disconnect()
        magConnection = nil
    end

    -- ESP
    if espEnabled then
        -- Create ESP for all existing footballs
        for _,ball in ipairs(workspace:GetDescendants()) do
            if ball:IsA("BasePart") and ball.Name=="Football" then
                createESP(ball)
            end
        end
        -- Keep updating radius only (lightweight)
        espConnection = RunService.RenderStepped:Connect(function()
            for b,s in pairs(espBalls) do
                if not (b and b.Parent) then
                    s:Destroy()
                    espBalls[b] = nil
                else
                    s.Radius = MAG_ESP_RADIUS
                end
            end
        end)
    else
        if espConnection then espConnection:Disconnect() espConnection=nil end
        for _,s in pairs(espBalls) do s:Destroy() end
        espBalls = {}
    end
end

-- Create toggle in UI
local MagsESPToggle = MagnetTab:CreateToggle({
    Name="Enable MAGS+ESP",
    CurrentValue=false,
    Callback=toggleMagsESP
})

-- Keybind [M] syncs with UI toggle
UserInputService.InputBegan:Connect(function(input,gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.M then
        local newState = not magsEnabled
        MagsESPToggle:Set(newState) -- sync UI
        toggleMagsESP(newState)
    end
end)
